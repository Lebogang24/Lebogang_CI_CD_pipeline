name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    name: Build and Test
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Keep this version consistent

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

  deploy_to_staging:
    name: Deploy to Staging
    needs: build_and_test
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Keep this version consistent

      - name: Deploy to Staging
        run: |
          # Add your deployment steps here
          # Replace the following line with your actual deployment command.
          echo "Deploying to staging..."

  notify_on_failure:
    name: Notify on Failure
    needs: deploy_to_staging
    runs-on: windows-latest
    
    if: always() && (failure() || needs.deploy_to_staging.result == 'failure')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Keep this version consistent

      - name: Send Notification
        run: |
          # Add your notification logic here
          # Replace the following line with your actual notification command.
          echo "Build or deployment failed! Notify the team."
